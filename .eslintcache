[{"C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\index.js":"1","C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\App.js":"2","C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\products\\products.component.jsx":"3","C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\product\\product.component.jsx":"4","C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\product\\product.styles.js":"5","C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\navbar\\navbar.component.jsx":"6","C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\navbar\\navbar.styles.js":"7","C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\index.js":"8","C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\products\\products.styles.js":"9","C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\lib\\commerce.js":"10","C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\cart\\cart.component.jsx":"11","C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\cart\\cart.styles.js":"12","C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\cart-item\\cart-item.component.jsx":"13","C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\cart-item\\cart-item.styles.js":"14","C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\checkout\\checkout.styles.js":"15","C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\checkout\\checkout.component.jsx":"16","C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\address-form\\address-form.component.jsx":"17","C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\checkout\\form-input.jsx":"18","C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\payment-form\\payment-form.component.jsx":"19","C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\review-checkout\\review-checkout.component.jsx":"20","C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\header-image\\header-image.component.jsx":"21","C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\footer\\footer.component.jsx":"22"},{"size":149,"mtime":1608675216166,"results":"23","hashOfConfig":"24"},{"size":3182,"mtime":1609016394855,"results":"25","hashOfConfig":"24"},{"size":756,"mtime":1608948331092,"results":"26","hashOfConfig":"24"},{"size":1421,"mtime":1608775478450,"results":"27","hashOfConfig":"24"},{"size":406,"mtime":1608683052943,"results":"28","hashOfConfig":"24"},{"size":1542,"mtime":1608783648617,"results":"29","hashOfConfig":"24"},{"size":1853,"mtime":1608754450002,"results":"30","hashOfConfig":"24"},{"size":405,"mtime":1609016438595,"results":"31","hashOfConfig":"24"},{"size":324,"mtime":1608754185466,"results":"32","hashOfConfig":"24"},{"size":131,"mtime":1608757942721,"results":"33","hashOfConfig":"24"},{"size":2767,"mtime":1608840074745,"results":"34","hashOfConfig":"24"},{"size":679,"mtime":1608777995791,"results":"35","hashOfConfig":"24"},{"size":1362,"mtime":1608785554902,"results":"36","hashOfConfig":"24"},{"size":389,"mtime":1608781281606,"results":"37","hashOfConfig":"24"},{"size":1382,"mtime":1608839341459,"results":"38","hashOfConfig":"24"},{"size":2550,"mtime":1608948387616,"results":"39","hashOfConfig":"24"},{"size":4193,"mtime":1608941727510,"results":"40","hashOfConfig":"24"},{"size":563,"mtime":1608936873618,"results":"41","hashOfConfig":"24"},{"size":2703,"mtime":1608950497666,"results":"42","hashOfConfig":"24"},{"size":1150,"mtime":1608948496200,"results":"43","hashOfConfig":"24"},{"size":1584,"mtime":1608970373784,"results":"44","hashOfConfig":"24"},{"size":550,"mtime":1609016849865,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"d0nmzz",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"53"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\index.js",[],["97","98"],"C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\App.js",[],"C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\products\\products.component.jsx",[],["99","100"],"C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\product\\product.component.jsx",[],"C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\product\\product.styles.js",[],"C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\navbar\\navbar.component.jsx",["101","102"],"import React from 'react';\r\nimport { AppBar, \r\n    Toolbar, \r\n    IconButton, \r\n    Badge, \r\n    MenuItem, \r\n    Menu, \r\n    Typography } from '@material-ui/core';\r\nimport { ShoppingCart } from '@material-ui/icons';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport Logo from '../../assets/TVMtransparent.png';  \r\nimport makeStyles from './navbar.styles'; \r\n\r\n\r\nconst Navbar = ({ totalItems }) => {\r\n    const classes = makeStyles();\r\n    const location = useLocation();\r\n\r\n    return (\r\n        <>\r\n            <AppBar position='fixed' className={classes.AppBar} color='inherit'>\r\n                <Toolbar>\r\n                    <Typography component={Link} to='/' variant='h6' className={classes.title} color='inherit'>\r\n                        <img src={Logo} alt='Teton Valley Meats' height='25px' className={classes.image} />\r\n                        Teton Valley Meats\r\n                    </Typography>\r\n                    <div className={classes.grow} /> \r\n                    { location.pathname === '/' && (\r\n                    <div className={classes.button}>\r\n                        <IconButton component={Link} to='/cart' aria-label='Show cart items' color='inherit'>\r\n                            <Badge badgeContent={totalItems} color='secondary' >\r\n                                <ShoppingCart />\r\n                            </Badge>\r\n                        </IconButton>\r\n                    </div>  )}\r\n                </Toolbar>\r\n            </AppBar>    \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\navbar\\navbar.styles.js",["103","104"],"import { makeStyles, fade } from '@material-ui/core/styles';\r\n\r\nconst drawerWidth = 0;\r\n\r\nexport default makeStyles((theme) => ({\r\n    appBar: {\r\n        boxShadow: 'none',\r\n        borderBottom: '1px solid rgba(0, 0, 0, 0.12)',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: 'calc(100% ~ ${drawerWidth}px)',\r\n            marginLeft: drawerWidth,\r\n        },\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        alignItems: 'center',\r\n        display: 'flex',\r\n        textDecoration: 'none',\r\n    },\r\n    image: {\r\n        marginRight: '10px',\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justfyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // verticle padding + font size from searchIcon\r\n        paddingLeft: 'calc(1em + ${theme.spacing(4)px}',\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n}));","C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\index.js",[],"C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\products\\products.styles.js",[],"C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\lib\\commerce.js",[],["105","106"],"C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\cart\\cart.component.jsx",[],"C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\cart\\cart.styles.js",[],"C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\cart-item\\cart-item.component.jsx",[],"C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\cart-item\\cart-item.styles.js",[],"C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\checkout\\checkout.styles.js",[],"C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\checkout\\checkout.component.jsx",["107","108","109"],"import React, { useState, useEffect } from 'react';\r\nimport { Paper, \r\n    Stepper, \r\n    Step, \r\n    StepLabel, \r\n    Typography, \r\n    CircularProgress, \r\n    Divider, \r\n    Button } from '@material-ui/core';\r\nimport { commerce } from '../../lib/commerce';    \r\nimport AddressForm from '../address-form/address-form.component';\r\nimport PaymentForm from '../payment-form/payment-form.component';   \r\nimport useStyles from './checkout.styles';    \r\n\r\nconst steps = ['Shipping address', 'Payment details'];    \r\n\r\nconst Checkout = ({ cart, order, onCaptureCheckout, error }) => {\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [checkoutToken, setCheckoutToken] = useState(null);\r\n    const [shippingData, setShippingData] = useState({});\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        const generateToken = async () => {\r\n            try {\r\n                const token = await commerce.checkout.generateToken(cart.id, {type: 'cart'});\r\n                console.log(token);\r\n                setCheckoutToken(token);\r\n            } catch (error) {\r\n\r\n            }\r\n        };\r\n\r\n        generateToken();\r\n    }, [cart]);\r\n\r\n    const nextStep = () => setActiveStep((prevActiveStep) => prevActiveStep + 1 );\r\n    const backStep = () => setActiveStep((prevActiveStep) => prevActiveStep - 1 );\r\n\r\n    const next = (data) => {\r\n        setShippingData(data);\r\n\r\n        nextStep();\r\n    }\r\n\r\n    const Confirmation = () => (\r\n        <div>\r\n            Confirmation\r\n        </div>\r\n    );\r\n\r\n    const Form = () => activeStep === 0\r\n        ? <AddressForm checkoutToken={checkoutToken} next={next} />\r\n        : <PaymentForm shippingData={shippingData} checkoutToken={checkoutToken} nextStep={nextStep} backStep={backStep} onCaptureCheckout={onCaptureCheckout} />\r\n\r\n    return (\r\n        <>\r\n          <div className={classes.toolbar} />\r\n          <main className={classes.layout}>\r\n              <Paper className={classes.paper}>\r\n                <Typography variant='h4' align='center'>Checkout</Typography>\r\n                <Stepper activeStep={activeStep} className={classes.stepper}>\r\n                    {steps.map((step) => (\r\n                        <Step key={step}>\r\n                            <StepLabel>{step}</StepLabel>\r\n                        </Step>\r\n                    ))}\r\n                </Stepper>\r\n                {activeStep === steps.length ? <Confirmation /> : checkoutToken && <Form /> }\r\n              </Paper>\r\n          </main>  \r\n        </>\r\n    );\r\n};\r\n\r\nexport default Checkout;\r\n","C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\address-form\\address-form.component.jsx",["110"],"import React, { useState, useEffect } from 'react';\r\nimport { InputLabel, \r\n    Select, \r\n    MenuItem, \r\n    Button, \r\n    Grid, \r\n    Typography } from '@material-ui/core';\r\nimport { useForm, FormProvider } from 'react-hook-form';  \r\nimport { commerce } from '../../lib/commerce';\r\nimport { Link } from 'react-router-dom';\r\nimport FormInput from '../checkout/form-input'; \r\n\r\nconst AddressForm = ({ checkoutToken, next }) => {\r\n    const [shippingCountries, setShippingCountries] = useState([]);\r\n    const [shippingCountry, setShippingCountry] = useState('');\r\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n    const [shippingSubdivision, setShippingSubdivision] = useState('');\r\n    const methods = useForm();\r\n\r\n    const countries = Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name }));\r\n    const subdivisions = Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name }));\r\n\r\n    const fetchShippingCountries = async (checkoutTokenId) => {\r\n        const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\r\n    \r\n        setShippingCountries(countries);\r\n        setShippingCountry(Object.keys(countries)[0]);\r\n    }\r\n\r\n    const fetchSubdivisions = async (countryCode) => {\r\n        const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\r\n\r\n        setShippingSubdivisions(subdivisions);\r\n        setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchShippingCountries(checkoutToken.id)\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n       if(shippingCountry) fetchSubdivisions(shippingCountry);\r\n    }, [shippingCountry]);\r\n\r\n    return (\r\n        <>\r\n            <Typography variant='h6' gutterBottom>Shipping Address</Typography>\r\n            <FormProvider {...methods}>\r\n                <form onSubmit={methods.handleSubmit((data) => next({...data, shippingCountry, shippingSubdivision}))}>\r\n                    <Grid container spacing={3}>\r\n                        <FormInput name='firstName' label='First name' />\r\n                        <FormInput name='lastName' label='Last name' />\r\n                        <FormInput name='address1' label='Address' />\r\n                        <FormInput name='email' label='Email' />\r\n                        <FormInput name='city' label='City' />\r\n                        <FormInput name='zipcode' label='Zipcode' />\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Country</InputLabel>\r\n                            <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                                {countries.map((country) => (\r\n                                    <MenuItem key={country.id} value={country.is}>\r\n                                        {country.label}\r\n                                    </MenuItem>\r\n                                ))} \r\n                            </Select>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>State</InputLabel>\r\n                            <Select value={shippingSubdivisions} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n                                {subdivisions.map((subdivision) => (\r\n                                    <MenuItem key={subdivision.id} value={subdivision.id}>\r\n                                        {subdivision.label}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>     \r\n                    </Grid>  \r\n                    <br />\r\n                    <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                        <Button component={Link} to='/cart' variant='outline'>Back to cart</Button>\r\n                        <Button type='submit' variant='contained' color='primary'>Next</Button>\r\n                    </div>  \r\n                </form> \r\n            </FormProvider>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default AddressForm;\r\n","C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\checkout\\form-input.jsx",[],"C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\payment-form\\payment-form.component.jsx",[],"C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\review-checkout\\review-checkout.component.jsx",[],"C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\header-image\\header-image.component.jsx",[],"C:\\Users\\veron\\Desktop\\TetonValleyMeats\\teton-valley-meats-site\\src\\components\\footer\\footer.component.jsx",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"111","replacedBy":"115"},{"ruleId":"113","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":6,"column":5,"nodeType":"119","messageId":"120","endLine":6,"endColumn":13},{"ruleId":"117","severity":1,"message":"121","line":7,"column":5,"nodeType":"119","messageId":"120","endLine":7,"endColumn":9},{"ruleId":"122","severity":1,"message":"123","line":10,"column":20,"nodeType":"124","messageId":"125","endLine":10,"endColumn":51},{"ruleId":"122","severity":1,"message":"123","line":61,"column":22,"nodeType":"124","messageId":"125","endLine":61,"endColumn":56},{"ruleId":"111","replacedBy":"126"},{"ruleId":"113","replacedBy":"127"},{"ruleId":"117","severity":1,"message":"128","line":7,"column":5,"nodeType":"119","messageId":"120","endLine":7,"endColumn":21},{"ruleId":"117","severity":1,"message":"129","line":8,"column":5,"nodeType":"119","messageId":"120","endLine":8,"endColumn":12},{"ruleId":"117","severity":1,"message":"130","line":9,"column":5,"nodeType":"119","messageId":"120","endLine":9,"endColumn":11},{"ruleId":"131","severity":1,"message":"132","line":39,"column":8,"nodeType":"133","endLine":39,"endColumn":10,"suggestions":"134"},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],["135"],["136"],"no-unused-vars","'MenuItem' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression",["135"],["136"],"'CircularProgress' is defined but never used.","'Divider' is defined but never used.","'Button' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.","ArrayExpression",["137"],"no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"140","text":"141"},[1604,1606],"[checkoutToken.id]"]